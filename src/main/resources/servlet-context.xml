<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <!--
    Scans the classpath of this application for @Components to deploy as
    beans
  -->
  <context:component-scan base-package="com.yeahmobi.rundemo.web" />

  <!-- Configures the @Controller programming model -->
  <mvc:annotation-driven />


  <!-- Configures Handler Interceptors -->
  <!--<mvc:interceptors>-->
  <!--
    Changes the locale when a 'locale' request parameter is sent; e.g.
    /?locale=de
  -->
  <!--
    <bean
    class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
    />
  -->
  <!--</mvc:interceptors>-->

  <!--
    Handles HTTP GET requests for /resources/** by efficiently serving
    up static resources in the ${webappRoot}/resources/ directory
  -->
  <mvc:resources mapping="/javascripts/**" location="/javascripts/" />
  <mvc:resources mapping="/images/**" location="/images/" />
  <mvc:resources mapping="/stylesheets/**" location="/stylesheets/" />
  <mvc:resources mapping="/*.html" location="/" />

  <!-- Saves a locale change using a cookie -->
  <!--
    <bean id="localeResolver"
    class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />
  -->

  <!-- Application Message Bundle -->
  <!--
    cacheSeconds: A value of "0" will check the last-modified timestamp
    of the file on every message access. Do not use this in a production
    environment!
  -->
  <!--
    <bean id="messageSource"
    class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="basename" value="/WEB-INF/messages/messages" />

    <property name="cacheSeconds" value="-1" /> </bean>
  -->

  <!--
    This bean sets up the Velocity environment for us based on a root
    path for templates. Optionally, a properties file can be specified
    for more control over the Velocity environment, but the defaults are
    pretty sane for file based template loading.
  -->
  <bean id="velocityConfig"
    class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
    <!--
      (1)resourceLoaderPath可以以classpath:或file:开头，velocity会自动知道ClassReourceLoader或FileReourceLoader去加载资源的。
      (2)这里指定了模板完整路径，viewResolver的prefix就不要设置了，让它为默认的空字符串即可,因为完整filename是path+prefix+name+suffix。
    -->
    <property name="resourceLoaderPath" value="/WEB-INF/views/" />
    <property name="configLocation" value="classpath:conf/velocity.properties" />
  </bean>

  <!--

    View resolvers can also be configured with ResourceBundles or XML
    files. If you need different view resolving based on Locale, you
    have to use the resource bundle resolver.
  -->
  <bean id="viewResolver"
    class="org.springframework.web.servlet.view.velocity.VelocityViewResolver"><!-- 一开始误用InternalResourceViewResolver，那是jsp使用的，谨记教训。 -->
    <property name="cache" value="true" />
    <property name="cacheUnresolved" value="true" />
    <property name="exposeSpringMacroHelpers" value="true" />
    <property name="exposeSessionAttributes" value="true" />
    <property name="requestContextAttribute" value="rc" />
    <property name="suffix" value=".htm" />
    <property name="toolboxConfigLocation">
      <value>/WEB-INF/velocity/toolbox.xml</value>
    </property>
    <property name="dateToolAttribute">
      <value>dateTool</value>
    </property>
    <property name="numberToolAttribute">
      <value>numberTool</value>
    </property>
    <!-- 设置响应头的content-type值 -->
    <property name="contentType" value="text/html; charset=UTF-8" />
  </bean>


</beans>
